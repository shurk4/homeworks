/*С помощью генератора случайных чисел рисуется картинка из нулей и единиц.
На вход от пользователя принимается размер картины: высота и ширина в пикселях.
На выходе нужно создать файл pic.txt, содержимое которого будет наполнено случайными нулями и единицами в рамках размера картины.

Это ещё не всё. Если вы запустите программу несколько раз на одних и тех же исходных данных (ширина и высота картины)
вы очень скоро обнаружите, что всё время выводится одна и та же картинка.
Дело в том, что у генератора случайных чисел есть ещё и «зерно», от которого он отталкивается.
Если это зерно не меняется, то и серия из rand() всегда будет возвращать одни и те же случайные числа.

Чтобы разнообразить вывод, вы можете использовать вызов std::srand(std::time(nullptr));
в самом начале программы. Эта операция задаёт начальное зерно случайных чисел в зависимости от текущего времени.
Для её корректной работы не забудьте также включить заголовочный файл <ctime>.*/

#include <iostream>
#include <fstream>
#include <cstdlib>
#include <ctime>

void input(int& x, int& y){
    std::cout << "Enter the picture size x, y: " << std::endl;
    do {
        std::cin >> x >> y;
        if (x < 1 || y < 1) {
            std::cout << "Wrong input! Try again:" << std::endl;
        }
    } while (x < 1 || y < 1);
}

void picToFile(int& x, int& y){
    std::srand(std::time(nullptr));
    std::ofstream file("..\\pic.txt");
    if(!file.is_open()){
        std::cout << "Cannot open the file!!!" << std::endl;
        return;
    }

    for(int i = 0; i < y; i++){
        for(int j = 0; j < x; j++){
            file << std::rand() % 2 << " ";
        }
        file << std::endl;
    }
    file.close();
}

int main() {
    int x, y;

    input(x, y);

    picToFile(x, y);

    return 0;
}
